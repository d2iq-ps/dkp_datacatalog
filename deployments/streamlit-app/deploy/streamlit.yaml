---
apiVersion: v1
data:
  app: "import streamlit as st\n\nst.set_page_config(\n    page_title=\"DKP Streamlit
    Application\",\n    page_icon=\"\U0001F9CA\",\n    layout=\"wide\",\n    initial_sidebar_state=\"expanded\",\n)\n\nst.title(\"Welcome
    to Streamlit\")\n\nst.text(\"Create a config map  called streamlit-config in this
    namespace with 2 x keys:\")\nst.text(\"A key called app, the value of which should
    be your streamlit python code\")\nst.text(\"A key called requirements. This should
    contain your python library requirements which can be generated by running 'pip
    freeze'\")"
  requirements: streamlit==1.13.0
kind: ConfigMap
metadata:
  name: streamlit-app
  namespace: nifi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlit-deployment
  labels:
    app: streamlit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streamlit
  template:
    metadata:
      labels:
        app: streamlit
    spec:
      containers:
      - name: streamlit
        image: "dswhitehouse/streamlit:0.1"
        command: ["/bin/bash"]
        args: ["-c", "pip install -r requirements.txt && streamlit run streamlit_app.py --server.port=8502 --server.address=0.0.0.0"]
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        ports:
        - containerPort: 8502
        volumeMounts:
          - name: streamlit-config
            mountPath: /app
      volumes:
        - name: streamlit-config
          configMap:
            name: streamlit-app
            items:
              - key: app
                path: streamlit_app.py
              - key: requirements
                path: requirements.txt
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: streamlit
  name: streamlit-service
  namespace: nifi
spec:
  ports:
  - port: 8502
    protocol: TCP
    targetPort: 8502
  selector:
    app: streamlit
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefixes-streamlit
  namespace: kommander
spec:
  stripPrefix:
    prefixes:
    - /streamlit
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: kommander-traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: kommander-stripprefixes-streamlit@kubernetescrd
  labels:
    app: streamlit
  name: streamlit-ingress
  namespace: nifi
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: streamlit-service
            port:
              number: 8502
        path: /streamlit
        pathType: Prefix
---